import { motion } from 'framer-motion';
import React, { useEffect, useState } from 'react';
import styles from '../../styles/SideSection/SunPosition.module.css';

type Props = {
  sun: {
    sunrise?: number;
    sunset?: number;
    getTime: Function;
    nextSunrise?: number;
    now: number;
  };
};

const SunPosition = ({
  sun: { sunrise, sunset, getTime, nextSunrise, now },
}: Props) => {
  const [isDayTime, setIsDayTime] = useState(true);
  const [isSunriseShifted, setIsSunriseShifted] = useState(false);
  const [nightTimePassed, setNightTimePassed] = useState(Number);
  const [dayTimePassed, setDayTimePassed] = useState(Number);

  useEffect(() => {
    if (!sunrise || !sunset || !nextSunrise || !now) return;
    if (sunrise * 1000 > now || now > sunset * 1000) {
      setIsDayTime(false);

      const night: number = nextSunrise * 1000 - sunset * 1000;
      let timeFromSunset: number = now - sunset * 1000;

      if (timeFromSunset < 0) {
        timeFromSunset = now + 86400000 - sunset * 1000;
        setIsSunriseShifted(true);
      }

      setNightTimePassed(timeFromSunset / night);
    } else {
      setIsDayTime(true);

      const day: number = sunset * 1000 - sunrise * 1000;
      const timeFromSunrise: number = now - sunrise * 1000;

      setDayTimePassed(timeFromSunrise / day);
    }
  }, [sunrise, sunset, nextSunrise, now]);

  return (
    <div className={styles.Wrapper}>
      <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 266 143'>
        <rect
          width='266'
          height='143'
          fill='var(--secondary-bg-color)'
          style={{ transition: 'fill var(--dark-mode-transition)' }}
        />
        <g id='Group 2'>
          <path
            id='Rectangle 6'
            d='M234 19H30V135H234V19Z'
            fill='var(--secondary-bg-color)'
            style={{ transition: 'fill var(--dark-mode-transition)' }}
          />
          {isDayTime && (
            <motion.rect
              id='sun-shadow'
              x='41'
              y='36.9999'
              width='1'
              height='92'
              fill='url(#paint0_linear_0_1)'
              initial={{ width: 0 }}
              animate={{
                width: `${dayTimePassed * 69.4 + '%'}`,
                transition: {
                  type: 'spring',
                  bounce: 0.5,
                  duration: 0.1,
                },
              }}
            />
          )}
          <motion.rect
            id='moon-shadow'
            x='41'
            y='36.9999'
            width='1'
            height='92'
            fill='url(#paint1_linear_0_1)'
            initial={{ width: 0 }}
            animate={{
              width: `${nightTimePassed * 69.4 + '%'}`,
              transition: {
                type: 'spring',
                bounce: 0.5,
                duration: 0.1,
              },
            }}
          />
          <path
            id='Subtract'
            fillRule='evenodd'
            clipRule='evenodd'
            d='M282 0H-18V135H282V0ZM133.5 37C184.586 37 226 78.471 226 129.628H41C41 78.471 82.414 37 133.5 37Z'
            fill='var(--secondary-bg-color)'
            style={{ transition: 'fill var(--dark-mode-transition)' }}
          />
          {isDayTime && (
            <motion.path
              id='sun-moving-dot'
              d='M41 133C43.2091 133 45 131.209 45 129C45 126.791 43.2091 125 41 125C38.7909 125 37 126.791 37 129C37 131.209 38.7909 133 41 133Z'
              fill='#F97F29'
              initial={{ translateX: 0 }}
              animate={{
                translateX: `${dayTimePassed * 69.4 + '%'}`,
                transition: {
                  type: 'spring',
                  bounce: 0.5,
                  duration: 0.1,
                },
              }}
            />
          )}
          {!isDayTime && (
            <motion.g
              initial={{ rotate: 0 }}
              animate={{
                rotate: `${nightTimePassed * 105 + 35 + 'deg'}`,
                transition: {
                  type: 'spring',
                  bounce: 0.5,
                  duration: 0.1,
                },
              }}
              id='moon'
            >
              <g id='Group 3'>
                <rect
                  id='Rectangle 7'
                  x='21.7097'
                  y='128'
                  width='237.29'
                  height='2'
                  fill='var(--secondary-bg-color)'
                  fillOpacity='0.01'
                />
                <circle
                  id='Ellipse 1'
                  cx='22'
                  cy='129'
                  r='11'
                  fill='url(#paint2_linear_0_1)'
                />
              </g>
            </motion.g>
          )}
          {isDayTime && (
            <motion.g
              id='sun'
              initial={{ rotate: 0 }}
              animate={{
                rotate: `${dayTimePassed * 105 + 35 + 'deg'}`,
                transition: {
                  type: 'spring',
                  bounce: 0.5,
                  duration: 0.1,
                },
              }}
            >
              <rect
                id='Rectangle 7_2'
                x='21.7097'
                y='128'
                width='237.29'
                height='2'
                fill='var(--secondary-bg-color)'
                fillOpacity='0.01'
              />
              <g id='Group'>
                <g id='sun_2'>
                  <path
                    id='Vector'
                    d='M22.2373 137C26.6057 137 30.147 133.642 30.147 129.5C30.147 125.358 26.6057 122 22.2373 122C17.869 122 14.3277 125.358 14.3277 129.5C14.3277 133.642 17.869 137 22.2373 137Z'
                    fill='url(#paint3_linear_0_1)'
                  />
                  <path
                    id='Vector_2'
                    d='M22.7646 117C22.7646 116.448 22.2925 116 21.71 116C21.1275 116 20.6554 116.448 20.6554 117V119C20.6554 119.552 21.1275 120 21.71 120C22.2925 120 22.7646 119.552 22.7646 119V117Z'
                    fill='#FF8E38'
                  />
                  <path
                    id='Vector_3'
                    d='M11.1638 130C11.7462 130 12.2184 129.552 12.2184 129C12.2184 128.448 11.7462 128 11.1638 128H9.05453C8.47206 128 7.99991 128.448 7.99991 129C7.99991 129.552 8.47206 130 9.05453 130H11.1638Z'
                    fill='#FF8E38'
                  />
                  <path
                    id='Vector_4'
                    d='M35.4201 130C36.0026 130 36.4747 129.552 36.4747 129C36.4747 128.448 36.0026 128 35.4201 128H33.3108C32.7284 128 32.2562 128.448 32.2562 129C32.2562 129.552 32.7284 130 33.3108 130H35.4201Z'
                    fill='#FF8E38'
                  />
                  <path
                    id='Vector_5'
                    d='M32.821 121.121C33.2328 120.731 33.2328 120.098 32.821 119.707C32.4091 119.317 31.7414 119.317 31.3295 119.707L29.8381 121.121C29.4262 121.512 29.4262 122.145 29.8381 122.536C30.2499 122.926 30.9177 122.926 31.3295 122.536L32.821 121.121Z'
                    fill='#FF8E38'
                  />
                  <path
                    id='Vector_6'
                    d='M14.8924 138.121C15.3043 137.731 15.3043 137.098 14.8924 136.707C14.4806 136.317 13.8128 136.317 13.4009 136.707L11.9095 138.121C11.4977 138.512 11.4977 139.145 11.9095 139.536C12.3213 139.926 12.9891 139.926 13.4009 139.536L14.8924 138.121Z'
                    fill='#FF8E38'
                  />
                  <path
                    id='Vector_7'
                    d='M13.4009 119.707C12.9891 119.317 12.3213 119.317 11.9095 119.707C11.4977 120.098 11.4977 120.731 11.9095 121.121L13.4009 122.536C13.8128 122.926 14.4806 122.926 14.8924 122.536C15.3043 122.145 15.3043 121.512 14.8924 121.121L13.4009 119.707Z'
                    fill='#FF8E38'
                  />
                  <path
                    id='Vector_8'
                    d='M31.3295 136.707C30.9177 136.317 30.2499 136.317 29.8381 136.707C29.4262 137.098 29.4262 137.731 29.8381 138.121L31.3295 139.536C31.7414 139.926 32.4091 139.926 32.821 139.536C33.2329 139.145 33.2329 138.512 32.821 138.121L31.3295 136.707Z'
                    fill='#FF8E38'
                  />
                  <path
                    id='Vector_9'
                    d='M22.7646 140C22.7646 139.448 22.2925 139 21.71 139C21.1275 139 20.6554 139.448 20.6554 140V142C20.6554 142.552 21.1275 143 21.71 143C22.2925 143 22.7646 142.552 22.7646 142V140Z'
                    fill='#FF8E38'
                  />
                </g>
              </g>
            </motion.g>
          )}
          <g id='Group 1'>
            <path
              id='Rectangle 2'
              d='M258 128H9C8.44772 128 8 128.448 8 129C8 129.552 8.44772 130 9 130H258C258.552 130 259 129.552 259 129C259 128.448 258.552 128 258 128Z'
              fill='#F97F29'
            />
            {!isDayTime && (
              <motion.path
                id='moon-moving-dot'
                d='M41 133C43.2091 133 45 131.209 45 129C45 126.791 43.2091 125 41 125C38.7909 125 37 126.791 37 129C37 131.209 38.7909 133 41 133Z'
                fill='#192741'
                initial={{ translateX: 0 }}
                animate={{
                  translateX: `${nightTimePassed * 69.4 + '%'}`,
                  transition: {
                    type: 'spring',
                    bounce: 0.5,
                    duration: 0.1,
                  },
                }}
              />
            )}
            <path
              id='sun-dot-start'
              d='M41 133C43.2091 133 45 131.209 45 129C45 126.791 43.2091 125 41 125C38.7909 125 37 126.791 37 129C37 131.209 38.7909 133 41 133Z'
              fill='#F97F29'
            />
            <path
              id='sun-dot-end'
              d='M226 133C228.209 133 230 131.209 230 129C230 126.791 228.209 125 226 125C223.791 125 222 126.791 222 129C222 131.209 223.791 133 226 133Z'
              fill='#F97F29'
            />
            {isDayTime && (
              <path
                id='moon-dot-end'
                d='M226 133C228.209 133 230 131.209 230 129C230 126.791 228.209 125 226 125C223.791 125 222 126.791 222 129C222 131.209 223.791 133 226 133Z'
                fill='#192741'
              />
            )}
            {!isDayTime && (
              <path
                id='moon-dot-start'
                d='M41 133C43.2091 133 45 131.209 45 129C45 126.791 43.2091 125 41 125C38.7909 125 37 126.791 37 129C37 131.209 38.7909 133 41 133Z'
                fill='#192741'
              />
            )}
          </g>
          <path
            id='Subtract_2'
            fillRule='evenodd'
            clipRule='evenodd'
            d='M40.9994 124.572L40.0014 124.509C40.0433 123.843 40.0921 123.18 40.1478 122.518L41.1443 122.602L42.1408 122.686C42.0863 123.334 42.0384 123.983 41.9974 124.634L40.9994 124.572ZM41.6883 117.699L40.6977 117.562C40.7886 116.903 40.8864 116.246 40.991 115.591L41.9784 115.749L42.9659 115.906C42.8636 116.547 42.7679 117.19 42.6789 117.836L41.6883 117.699ZM42.8862 110.899L41.9085 110.689C42.0486 110.037 42.1954 109.388 42.3489 108.742L43.3219 108.973L44.2948 109.204C44.1446 109.836 44.0009 110.471 43.8639 111.109L42.8862 110.899ZM44.5899 104.206L43.6307 103.923C43.8189 103.285 44.0138 102.649 44.2152 102.017L45.168 102.32L46.1209 102.623C45.9239 103.242 45.7332 103.864 45.549 104.489L44.5899 104.206ZM46.7904 97.6605L45.8551 97.3065C46.0908 96.6838 46.333 96.0643 46.5815 95.448L47.5089 95.8221L48.4364 96.1961C48.1932 96.7991 47.9563 97.4052 47.7256 98.0145L46.7904 97.6605ZM49.4757 91.2982L48.5696 90.8751C48.8512 90.2721 49.139 89.6727 49.4329 89.0768L50.3298 89.5192L51.2266 89.9616C50.9389 90.5447 50.6573 91.1313 50.3818 91.7213L49.4757 91.2982ZM52.6299 85.1544L51.758 84.6648C52.0838 84.0846 52.4156 83.5084 52.7533 82.936L53.6146 83.4442L54.4758 83.9523C54.1454 84.5124 53.8207 85.0764 53.5018 85.6441L52.6299 85.1544ZM56.2339 79.2636L55.4009 78.7103C55.7691 78.156 56.143 77.6059 56.5226 77.0601L57.3436 77.631L58.1646 78.2019C57.7931 78.7361 57.4271 79.2745 57.0668 79.8169L56.2339 79.2636ZM60.2671 73.6566L59.4776 73.0429C59.8858 72.5178 60.2994 71.9972 60.7185 71.4812L61.4948 72.1116L62.271 72.742C61.8609 73.247 61.4561 73.7565 61.0566 74.2704L60.2671 73.6566ZM64.7055 68.3655L63.9638 67.6948C64.4099 67.2014 64.8612 66.7128 65.3176 66.2292L66.0449 66.9155L66.7722 67.6018C66.3256 68.0751 65.8839 68.5533 65.4472 69.0362L64.7055 68.3655ZM69.525 63.4181L68.8351 62.6942C69.3166 62.2354 69.8029 61.7818 70.294 61.3333L70.9683 62.0717L71.6426 62.8101C71.162 63.2491 70.6861 63.6931 70.2149 64.1421L69.525 63.4181ZM74.6987 58.8427L74.0646 58.0695C74.5786 57.6479 75.0972 57.2317 75.6203 56.8211L76.2378 57.6076L76.8554 58.3942C76.3434 58.7961 75.8359 59.2034 75.3328 59.6159L74.6987 58.8427ZM80.1982 54.6655L79.6234 53.8471C80.1676 53.465 80.716 53.0885 81.2685 52.7178L81.8256 53.5482L82.383 54.3787C81.842 54.7414 81.3054 55.1098 80.7729 55.4838L80.1982 54.6655ZM85.994 50.9105L85.482 50.0514C86.053 49.7112 86.628 49.377 87.207 49.0488L87.7 49.9186L88.193 50.7884C87.627 51.1096 87.065 51.4366 86.506 51.7695L85.994 50.9105ZM92.055 47.6008L91.609 46.7057C92.204 46.4093 92.802 46.1192 93.404 45.8353L93.831 46.7398L94.257 47.6442C93.669 47.922 93.083 48.2059 92.501 48.4958L92.055 47.6008ZM98.347 44.7567L97.97 43.8306C98.585 43.58 99.204 43.3357 99.826 43.098L100.183 44.0321L100.54 44.9661C99.932 45.1987 99.326 45.4377 98.724 45.6829L98.347 44.7567ZM104.837 42.3955L104.531 41.4435C105.163 41.2403 105.798 41.0436 106.436 40.8536L106.721 41.812L107.007 42.7704C106.383 42.9563 105.761 43.1487 105.143 43.3475L104.837 42.3955ZM111.484 40.5324L111.251 39.56C111.897 39.405 112.546 39.2568 113.197 39.1154L113.409 40.0926L113.621 41.0699C112.984 41.2082 112.35 41.3532 111.718 41.5048L111.484 40.5324ZM118.257 39.1762L118.098 38.189C118.752 38.0834 119.41 37.9847 120.069 37.8928L120.207 38.8833L120.345 39.8737C119.7 39.9636 119.057 40.0602 118.416 40.1635L118.257 39.1762ZM125.109 38.334L125.024 37.3376C125.685 37.2813 126.349 37.232 127.014 37.1897L127.078 38.1877L127.141 39.1856C126.49 39.2271 125.841 39.2753 125.193 39.3304L125.109 38.334ZM132.009 38.0051L131.998 37.0052C132.332 37.0017 132.666 36.9999 133 36.9999C133.334 36.9999 133.668 37.0017 134.002 37.0052L133.991 38.0051L133.981 39.0051C133.654 39.0016 133.327 38.9999 133 38.9999C132.673 38.9999 132.346 39.0016 132.019 39.0051L132.009 38.0051ZM138.922 38.1877L138.986 37.1897C139.651 37.232 140.315 37.2813 140.976 37.3376L140.891 38.334L140.807 39.3304C140.159 39.2753 139.51 39.2271 138.859 39.1856L138.922 38.1877ZM145.793 38.8833L145.931 37.8928C146.591 37.9847 147.248 38.0834 147.902 38.189L147.743 39.1763L147.584 40.1635C146.943 40.0602 146.3 39.9636 145.655 39.8737L145.793 38.8833ZM152.591 40.0927L152.803 39.1154C153.454 39.2568 154.103 39.405 154.749 39.56L154.516 40.5324L154.282 41.5048C153.65 41.3532 153.016 41.2082 152.379 41.0699L152.591 40.0927ZM159.279 41.812L159.564 40.8536C160.202 41.0436 160.837 41.2403 161.469 41.4435L161.163 42.3955L160.857 43.3475C160.239 43.1487 159.617 42.9563 158.993 42.7704L159.279 41.812ZM165.817 44.0321L166.174 43.098C166.796 43.3358 167.415 43.58 168.03 43.8306L167.653 44.7567L167.276 45.6829C166.674 45.4377 166.068 45.1987 165.46 44.9662L165.817 44.0321ZM172.169 46.7398L172.596 45.8353C173.198 46.1192 173.796 46.4094 174.391 46.7057L173.945 47.6008L173.499 48.4958C172.917 48.2059 172.332 47.922 171.743 47.6442L172.169 46.7398ZM178.3 49.9186L178.793 49.0488C179.372 49.377 179.947 49.7113 180.518 50.0514L180.006 50.9105L179.494 51.7695C178.935 51.4367 178.373 51.1096 177.807 50.7884L178.3 49.9186ZM184.174 53.5483L184.732 52.7178C185.284 53.0885 185.832 53.465 186.377 53.8471L185.802 54.6655L185.227 55.4838C184.695 55.1098 184.158 54.7414 183.617 54.3787L184.174 53.5483ZM189.762 57.6076L190.38 56.8211C190.903 57.2317 191.421 57.6479 191.935 58.0695L191.301 58.8427L190.667 59.6159C190.164 59.2034 189.657 58.7961 189.145 58.3942L189.762 57.6076ZM195.032 62.0717L195.706 61.3333C196.197 61.7818 196.683 62.2354 197.165 62.6942L196.475 63.4182L195.785 64.1421C195.314 63.6931 194.838 63.2491 194.357 62.8102L195.032 62.0717ZM199.955 66.9155L200.682 66.2292C201.139 66.7129 201.59 67.2014 202.036 67.6948L201.295 68.3655L200.553 69.0362C200.116 68.5533 199.674 68.0752 199.228 67.6018L199.955 66.9155ZM204.505 72.1116L205.282 71.4812C205.701 71.9972 206.114 72.5178 206.522 73.0429L205.733 73.6567L204.943 74.2704C204.544 73.7565 204.139 73.247 203.729 72.742L204.505 72.1116ZM208.656 77.631L209.477 77.0601C209.857 77.606 210.231 78.1561 210.599 78.7103L209.766 79.2636L208.933 79.8169C208.573 79.2745 208.207 78.7362 207.835 78.202L208.656 77.631ZM212.385 83.4442L213.247 82.936C213.584 83.5084 213.916 84.0847 214.242 84.6648L213.37 85.1544L212.498 85.6441C212.179 85.0764 211.855 84.5125 211.524 83.9523L212.385 83.4442ZM215.67 89.5192L216.567 89.0768C216.861 89.6727 217.149 90.2722 217.43 90.8752L216.524 91.2983L215.618 91.7214C215.343 91.1313 215.061 90.5447 214.773 89.9616L215.67 89.5192ZM218.491 95.8221L219.419 95.4481C219.667 96.0643 219.909 96.6838 220.145 97.3065L219.21 97.6606L218.274 98.0146C218.044 97.4053 217.807 96.7991 217.564 96.1961L218.491 95.8221ZM220.832 102.32L221.785 102.017C221.986 102.649 222.181 103.285 222.369 103.923L221.41 104.206L220.451 104.489C220.267 103.864 220.076 103.242 219.879 102.624L220.832 102.32ZM222.678 108.973L223.651 108.742C223.805 109.388 223.951 110.037 224.091 110.689L223.114 110.899L222.136 111.109C221.999 110.471 221.855 109.836 221.705 109.204L222.678 108.973ZM224.022 115.749L225.009 115.591C225.114 116.246 225.211 116.903 225.302 117.563L224.312 117.699L223.321 117.836C223.232 117.19 223.136 116.547 223.034 115.906L224.022 115.749ZM225.852 122.518C225.908 123.18 225.957 123.843 225.999 124.509L225.001 124.572L224.003 124.634C223.962 123.983 223.914 123.334 223.859 122.686L224.856 122.602L225.852 122.518Z'
            fill={isDayTime ? '#F97F29' : '#192741'}
          />
        </g>
        <defs>
          <linearGradient
            id='paint0_linear_0_1'
            x1='41.4943'
            y1='-55.5001'
            x2='64.1835'
            y2='126.167'
            gradientUnits='userSpaceOnUse'
          >
            <stop stopColor='#FF8E38' />
            <stop offset='1' stopColor='#C4C4C4' stopOpacity='0' />
          </linearGradient>
          <linearGradient
            id='paint1_linear_0_1'
            x1='41.4943'
            y1='-55.5001'
            x2='64.1835'
            y2='126.167'
            gradientUnits='userSpaceOnUse'
          >
            <stop stopColor='#C0D6E8' />
            <stop offset='1' stopColor='#C4C4C4' stopOpacity='0' />
          </linearGradient>
          <linearGradient
            id='paint2_linear_0_1'
            x1='22'
            y1='118'
            x2='22'
            y2='140'
            gradientUnits='userSpaceOnUse'
          >
            <stop stopColor='#E8F2FA' />
            <stop offset='1' stopColor='#BED5E7' />
          </linearGradient>
          <linearGradient
            id='paint3_linear_0_1'
            x1='26.9831'
            y1='135.5'
            x2='17.5908'
            y2='123.509'
            gradientUnits='userSpaceOnUse'
          >
            <stop stopColor='#FF8E38' />
            <stop offset='1' stopColor='#FFBE50' />
          </linearGradient>
        </defs>
      </svg>
      {isDayTime ? (
        <>
          <div className={styles.Description}>
            <div className={styles.State}>
              <div className={styles.Sun}>Sunrise</div>
              <div className={styles.Time}>{getTime(sunrise)}</div>
            </div>
            <div className={styles.State}>
              <div className={styles.Sun}>Sunset</div>
              <div className={styles.Time}>{getTime(sunset)}</div>
            </div>
          </div>
        </>
      ) : (
        <>
          <div className={styles.Description}>
            <div className={styles.State}>
              <div className={styles.Sun}>Sunset</div>
              <div className={styles.Time}>{getTime(sunset)}</div>
            </div>
            <div className={styles.State}>
              <div className={styles.Sun}>Sunrise</div>
              <div className={styles.Time}>
                {isSunriseShifted ? getTime(sunrise) : getTime(nextSunrise)}
              </div>
            </div>
          </div>
        </>
      )}
    </div>
  );
};

export default SunPosition;
